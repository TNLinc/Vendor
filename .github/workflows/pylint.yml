name: Pylint
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TEST_DB_NAME: vendor
      TEST_DB_USER: postgres
      TEST_DB_PASSWORD: test
      TEST_DB_HOST: localhost
      TEST_DB_PORT: 5444
      VENDOR_DB_SCHEMA: vendor
      ENV_FOR_DYNACONF: testing
    steps:

      - uses: actions/checkout@v2

      - name: Set up Python 3.9.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.8

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # analise code
      #----------------------------------------------
      - name: Analysing service code with pylint
        run: |
          source .venv/bin/activate
          mkdir -p pylint_reports
          pylint * > pylint_reports/pylint_checks.json || exit_code=`echo $?` || true
          pylint-json2html -o pylint_reports/pylint_checks.html ./pylint_reports/pylint_checks.json
          deactivate
          exit ${exit_code}
      #----------------------------------------------
      # create artifacts
      #----------------------------------------------
      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: pylint_report
          path: pylint_reports
