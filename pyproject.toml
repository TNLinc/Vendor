[tool.poetry]
name = "vendor"
version = "0.1.0"
description = ""
authors = ["ilyakochankov <ilyakochankov@yandex.ru>"]

[tool.poetry.dependencies]
python = "3.9.8"
fastapi = "^0.68.1"
uvicorn = "^0.15.0"
sqlmodel = "0.0.4"
SQLAlchemy-Utils = "^0.37.8"
environs = "^9.3.3"
asyncpg = "^0.24.0"
colour = "^0.1.5"
fastapi-utils = "^0.2.1"
orjson = "^3.6.3"
email-validator = "^1.1.3"
fastapi-health = "^0.4.0"
Pillow = "^8.4.0"
fastapi-pagination = "^0.9.1"
numpy = "^1.21.4"

[tool.poetry.dev-dependencies]
pylint = "^2.11.1"
pylint-json2html = "^0.3.0"
isort = "^5.9.3"
black = "^21.9b0"
pyproject-flake8 = "^0.0.1-alpha.2"
flake8-html = "^0.4.1"
pytest = "^6.2.5"
requests = "^2.26.0"
httpx = "^0.21.1"
pytest-asyncio = "^0.16.0"
pylint-pytest = "^1.1.2"
tenacity = "^8.0.1"
nest-asyncio = "^1.5.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.yapf]
based_on_style = "pep8"

[tool.pylint.MASTER]
ignore = ".venv, Dockerfile, Procfile, README.md, poetry.lock, pyproject.toml"
load-plugins = [
    "pylint_pytest",
    "pylint.extensions.code_style"
]

[tool.pylint.'REPORTS']
output-format = "json"

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "missing-docstring",
    "import-outside-toplevel",
    "invalid-name",
    "too-few-public-methods",
    "no-member",
    "no-name-in-module",
    "no-self-argument",
    "no-self-use"
]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[tool.flake8]
max-line-length = 120
format = "html"
htmldir = "flake-report"
exclude = ".venv"

[tool.bandit]
exclude_dirs = ["tests"]
