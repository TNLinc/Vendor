version: "3.9"
services:
  vendor_db:
    image: tnlinc/db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - main
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_volume:/var/lib/comparing/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  test_db:
    image: tnlinc/db
    environment:
      POSTGRES_DB: ${TEST_DB_NAME}
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
    networks:
      - main
    ports:
      - "${TEST_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${TEST_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  vendor:
    build: .
    image: tnlinc/vendor
    depends_on:
      vendor_db:
        condition: service_healthy
    expose:
      - "8000"
    env_file:
      - .env
    networks:
      - main
    ports:
      - "${VENDOR_PORT}:8000"
    healthcheck:
      test: [ "CMD-SHELL", "bash scripts/fastApi_health_check.sh" ]
      interval: 30s
      timeout: 30s
      retries: 5

volumes:
  db_volume: { }

networks:
  main: { }
